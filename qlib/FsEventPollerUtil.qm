# -*- mode: qore; indent-tabs-mode: nil -*-
#! @file FsEventPollerUtil.qm provides definitions for the FsEventPoller module

/*  FsEventPollerUtil.qm Copyright (C) 2014 - 2020 Qore Technologies, s.r.o.

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

# make sure we have the required qore version
%requires qore >= 0.9.4
%requires (reexport) fsevent

# assume local vars and do not allow $ chars
%new-style

%requires DataProvider

module FsEventPollerUtil {
    version = "1.0";
    desc = "FsEventPollerUtil module";
    author = "David Nichols <david@qore.org>";
    url = "http://qore.org";
    license = "MIT";
    init = sub () {
        # register the event data type
        DataProvider::registerType("qore/fsevents/event", new FsEventPollerFileEventInfoDataType());
    };
}

/** @mainpage FsEventPollerUtil Module

    @section FsEventPollerutuilintro Introduction to the FsEventPollerUtil Module

    The FsEventPollerUtil module defines types for the <a href="../../FsEventPoller/html/index.html">FsEventPoller</a> module.

    @section FsEventPollerutilrelnotes FsEventPollerUtil Module Release Notes

    @section FsEventPollerutilv1_0 Version 1.0
    - initial release
*/

#! main FsEventPoller namespace
public namespace FsEventPoller {
#! Single file event data description
public class FsEventPollerFileEventInfoDataType inherits HashDataType {
    public {
        #! Markdown descriptions for hashdecl members
        const FieldDescriptions = {
            "id": "the monitoring id as returned from AbstractFsWatcher::addPath()",
            "dir": "the directory path",
            "name": "the affected file name (without the path)",
            "action": "the action type; 1 = add, 2 = delete, 3 = modified, 4 = moved",
            "old_name": "the old file name if the action is was 4 = moved",
        };
    }

    #! Creates the type
    constructor() {
        # add members for base hashdecl
        map addField(new QoreDataField($1.getName(), FieldDescriptions{$1.getName()}, $1.getType(),
            $1.getDefaultValue())), TypedHash::forName("FsEvents::FsEventInfo").getMembers();
    }
}
}
